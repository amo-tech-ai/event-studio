# EventOS Wizard Tests - Multi-Step Form Validation
# Purpose: Test complex wizard flows with drag-drop, file upload, state persistence
# Runtime: ~8-10 minutes
# Priority: P1 (run before merging wizard features)

# ==============================================================================
# TEST 1: Wizard Step Progression
# ==============================================================================
# Validates: Multi-step form navigates correctly, state persists between steps

NAVIGATE: /events/new/wizard

WAIT_FOR: "Step 1" -> Basic Info

SNAPSHOT: -> Capture wizard structure

SCREENSHOT: wizard-step-1.png

# Fill Step 1: Basic Event Info
FILL_FORM: {
  "fields": [
    {"name": "Event Name", "ref": "input-name", "value": "Tech Summit 2025"},
    {"name": "Event Type", "ref": "select-type", "value": "Conference"},
    {"name": "Date", "ref": "input-date", "value": "2025-12-15"}
  ]
}

CLICK: element="Next Step button", ref="btn-next-step-1"

WAIT_FOR: "Step 2" -> Event Details

SCREENSHOT: wizard-step-2.png

# Expected: Step 1 data saved, moved to Step 2

# ==============================================================================
# TEST 2: Drag-Drop Agenda Builder
# ==============================================================================
# Validates: Drag-drop interactions work for reordering agenda items

WAIT_FOR: "Agenda Builder"

SNAPSHOT: -> See agenda items

# Add agenda items
CLICK: element="Add Item", ref="btn-add-agenda-item"

FILL: ref="input-agenda-title", value="Opening Keynote"

FILL: ref="input-agenda-time", value="09:00 AM"

CLICK: element="Save Item", ref="btn-save-agenda-item"

# Add second item
CLICK: element="Add Item", ref="btn-add-agenda-item"

FILL: ref="input-agenda-title", value="Panel Discussion"

FILL: ref="input-agenda-time", value="10:30 AM"

CLICK: element="Save Item", ref="btn-save-agenda-item"

SCREENSHOT: agenda-items-added.png

# Drag to reorder
DRAG: from_element="Panel Discussion", from_ref="agenda-item-2", to_element="Opening Keynote", to_ref="agenda-item-1"

WAIT: time=1 -> Allow reorder animation

SCREENSHOT: agenda-items-reordered.png

CLICK: element="Next Step button", ref="btn-next-step-2"

WAIT_FOR: "Step 3" -> Media Upload

# Expected: Agenda items reordered, state saved

# ==============================================================================
# TEST 3: File Upload
# ==============================================================================
# Validates: File upload works for event banners, speaker photos

WAIT_FOR: "Upload Event Banner"

SNAPSHOT: -> See upload UI

# Create test image file
# Note: This requires actual file on system
# For real tests, use: /tmp/test-banner.png

SCREENSHOT: upload-form-empty.png

# Upload file (requires file path)
# UPLOAD_FILE: ref="input-banner-upload", filePath="/tmp/test-banner.png"

# For now, just verify upload UI exists
CLICK: element="Upload Banner button", ref="btn-upload-banner"

WAIT_FOR: "Choose file" -> File picker should open

SCREENSHOT: file-picker-opened.png

# Skip actual file selection in smoke test
# In real test: select file, wait for upload, verify preview

CLICK: element="Next Step button", ref="btn-next-step-3"

WAIT_FOR: "Step 4" -> Ticket Configuration

# Expected: Upload UI works, file picker opens

# ==============================================================================
# TEST 4: Dynamic Ticket Tiers
# ==============================================================================
# Validates: Adding/removing ticket tiers dynamically

WAIT_FOR: "Ticket Tiers"

SNAPSHOT: -> See ticket configuration

# Add General Admission tier
CLICK: element="Add Ticket Tier", ref="btn-add-ticket-tier"

FILL_FORM: {
  "fields": [
    {"name": "Tier Name", "ref": "input-tier-name", "value": "General Admission"},
    {"name": "Price", "ref": "input-tier-price", "value": "99.00"},
    {"name": "Quantity", "ref": "input-tier-quantity", "value": "500"}
  ]
}

CLICK: element="Save Tier", ref="btn-save-tier"

SCREENSHOT: tier-1-added.png

# Add VIP tier
CLICK: element="Add Ticket Tier", ref="btn-add-ticket-tier"

FILL_FORM: {
  "fields": [
    {"name": "Tier Name", "ref": "input-tier-name", "value": "VIP Access"},
    {"name": "Price", "ref": "input-tier-price", "value": "299.00"},
    {"name": "Quantity", "ref": "input-tier-quantity", "value": "100"}
  ]
}

CLICK: element="Save Tier", ref="btn-save-tier"

SCREENSHOT: tier-2-added.png

# Test removing a tier
CLICK: element="Remove General Admission", ref="btn-remove-tier-1"

WAIT_FOR: "Are you sure?" -> Confirmation dialog

HANDLE_DIALOG: action="accept"

SCREENSHOT: tier-removed.png

CLICK: element="Next Step button", ref="btn-next-step-4"

WAIT_FOR: "Step 5" -> Review

# Expected: Tiers added/removed dynamically, state managed correctly

# ==============================================================================
# TEST 5: Review and Submit
# ==============================================================================
# Validates: Review page shows all data, submission works

WAIT_FOR: "Review Your Event"

SNAPSHOT: -> See full review

# Verify all data from previous steps appears
WAIT_FOR: "Tech Summit 2025" -> Event name from Step 1

WAIT_FOR: "Opening Keynote" -> Agenda from Step 2

WAIT_FOR: "VIP Access" -> Ticket tier from Step 4

SCREENSHOT: wizard-review-complete.png

# Monitor network for submission
CLICK: element="Create Event button", ref="btn-submit-wizard"

NETWORK_REQUESTS: -> Monitor POST to Supabase

WAIT_FOR: "Event created successfully" -> Success message

SCREENSHOT: wizard-success.png

CONSOLE_MESSAGES: onlyErrors=true -> Check for errors

# Expected: All data preserved, submission succeeds, success message shown

# ==============================================================================
# TEST 6: Wizard Navigation (Back Button)
# ==============================================================================
# Validates: Going back preserves form state

NAVIGATE: /events/new/wizard

# Fill Step 1
FILL_FORM: {
  "fields": [
    {"name": "Event Name", "ref": "input-name", "value": "Test Backward Nav"}
  ]
}

CLICK: element="Next Step button", ref="btn-next-step-1"

WAIT_FOR: "Step 2"

SCREENSHOT: step-2-before-back.png

# Go back to Step 1
CLICK: element="Previous Step button", ref="btn-prev-step"

WAIT_FOR: "Step 1"

SNAPSHOT: -> Verify form still filled

# Validate field still has value
SCREENSHOT: step-1-after-back.png

# Expected: Form data preserved when going backward

# ==============================================================================
# TEST 7: Wizard Validation
# ==============================================================================
# Validates: Required fields enforced, validation errors shown

NAVIGATE: /events/new/wizard

# Try to proceed without filling required fields
CLICK: element="Next Step button", ref="btn-next-step-1"

WAIT_FOR: "Event name is required" -> Validation error

SCREENSHOT: validation-error.png

CONSOLE_MESSAGES: -> Check error handling

# Fill required field
FILL: ref="input-name", value="Valid Event Name"

CLICK: element="Next Step button", ref="btn-next-step-1"

WAIT_FOR: "Step 2" -> Should proceed now

# Expected: Validation prevents progression, errors displayed

# ==============================================================================
# WIZARD TEST SUCCESS CRITERIA
# ==============================================================================
# ✅ Multi-step progression works
# ✅ State persists between steps
# ✅ Drag-drop reordering works
# ✅ File upload UI functional
# ✅ Dynamic form sections (add/remove tiers)
# ✅ Review shows all data correctly
# ✅ Submission succeeds
# ✅ Backward navigation preserves state
# ✅ Validation enforced
# ✅ No console errors

# ==============================================================================
# ADVANCED FEATURES TESTED
# ==============================================================================
# ✅ Drag-drop interactions
# ✅ File upload handling
# ✅ Dynamic form generation
# ✅ Complex state management
# ✅ Multi-step form wizard
# ✅ Dialog confirmations

# ==============================================================================
# METRICS
# ==============================================================================
# Total tests: 7
# Expected runtime: 8-10 minutes
# Failure tolerance: 0 (all must pass)
# Run frequency: Before merging wizard features

# ==============================================================================
# NOTES
# ==============================================================================
# - File upload requires actual files on system
# - Drag-drop may need wait time for animations
# - Review step validates data from all previous steps
# - Wizard state should use localStorage or React Context
# - Each step should be independently testable
