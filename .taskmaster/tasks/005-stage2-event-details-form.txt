# Task ID: 5
# Title: Stage 2 - Event Details Form Implementation
# Status: pending
# Dependencies: 4
# Priority: medium
# Description: Build the second wizard stage for detailed event information including format selection, accessibility requirements, branding options, and logo upload.
# Details:
Create Stage2.tsx with detailed description textarea (500-2000 chars), event format radio buttons (in-person/virtual/hybrid), accessibility requirements checklist component, special requirements textarea, color picker for branding (react-colorful), logo upload with preview. Use existing UI components where possible. Add validation for required fields and character limits. Integrate with wizard store. Code: const Stage2 = () => { const accessibilityOptions = ['wheelchair-accessible', 'sign-language', 'audio-description', 'large-print']; return (<FormCard><Textarea maxLength={2000} /><RadioGroup options={formatOptions} /><TagSelector options={accessibilityOptions} /><ColorPicker /></FormCard>); };

# Test Strategy:
Test format selection functionality, verify accessibility checklist multi-select, test color picker integration, validate logo upload with size restrictions, test character count validation, verify all fields save to store correctly.

# Subtasks:
## 1. Create Stage2 component structure with form layout [pending]
### Dependencies: None
### Description: Create the basic Stage2.tsx component with FormCard wrapper and section layout for event details form
### Details:
Create Stage2.tsx component using existing FormCard component. Set up the basic structure with sections for detailed description, event format, accessibility requirements, special requirements, branding, and logo upload. Import necessary UI components and establish the component layout following existing patterns from Stage1.

## 2. Implement detailed description textarea with character validation [pending]
### Dependencies: 5.1
### Description: Add detailed description textarea with 500-2000 character limit and real-time character counter
### Details:
Implement Textarea component with minLength={500} and maxLength={2000} validation. Add character counter display showing current/max characters. Integrate with Zod validation schema for real-time validation. Add proper error messaging for character limit violations. Connect to wizard store for state management.

## 3. Build event format selection with radio buttons [pending]
### Dependencies: 5.1
### Description: Create event format selection using RadioGroup component for in-person, virtual, and hybrid options
### Details:
Implement RadioGroup component with three options: 'in-person', 'virtual', 'hybrid'. Use existing RadioCard components for consistent styling. Add proper labels and descriptions for each format option. Integrate with wizard store and validation schema. Ensure selection is required and properly validated.

## 4. Create accessibility requirements checklist and special requirements textarea [pending]
### Dependencies: 5.1
### Description: Implement TagSelector for accessibility options and textarea for special requirements
### Details:
Create TagSelector component with accessibility options: 'wheelchair-accessible', 'sign-language', 'audio-description', 'large-print'. Allow multiple selections. Add special requirements textarea with appropriate character limits. Integrate both components with wizard store and validation. Ensure proper accessibility attributes for screen readers.

## 5. Implement color picker and logo upload with preview [pending]
### Dependencies: 5.1
### Description: Add react-colorful color picker for branding and logo upload component with image preview functionality
### Details:
Integrate react-colorful ColorPicker component for brand color selection. Implement logo upload component with file validation (max 2MB, image formats only), image preview functionality, and drag-and-drop support. Add proper error handling for file size and format validation. Connect both components to wizard store and ensure proper state management.

